<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
		"-//Apache Software Foundation//DTD Struts Configuration 2.1//EN"
		"http://struts.apache.org/dtds/struts-2.1.dtd">

<!-- 
  - Author: Arne Roever
  - Description: All struts actions used in stundenplan-db.  
-->


<struts>
	<package name="default" extends="tiles-default">
		
		<!--  Action that displays the main menu. -->
		
		<action name="ShowMainMenu">
			<result type="tiles">mainMenu</result>
		</action>
		
				
		<!-- Master data related actions -->
		
		<!-- Actions that displays the menu for choosing which master data to create-->
		<action name="ShowMasterData">
			<result type="tiles">masterData</result>
		</action>
		
		
		<!--  Lecturer related actions -->
		<action name="ShowLecturerForm" class="de.nak.stundenplandb.action.LecturerAction">
		    <interceptor-ref name="validation">
		        <param name="excludeMethods">execute</param>
		    </interceptor-ref>
			<result type="tiles">lecturerForm</result>
		</action>
		
		<!-- Action that saves the lecturer  -->
		<action name="SaveLecturer" class="de.nak.stundenplandb.action.LecturerAction" method="save">
			<result type="redirect">ShowLecturerForm.action</result>
			<result type="tiles" name="input">lecturerForm</result>			
		</action>	
		
		<!-- Action that cancels the lecturer form -->
		<action name="CancelNewLecturer" class="de.nak.stundenplandb.action.LecturerAction" method="cancel">
			<result type="redirect">ShowMasterData.action</result>
		</action>
		
		<!-- Room related actions -->
		
		<!--  Action that displays the room form -->
		<action name="ShowRoomForm" class="de.nak.stundenplandb.action.RoomAction">
		    <interceptor-ref name="validation">
		        <param name="excludeMethods">execute</param>
		    </interceptor-ref>
			<result type="tiles">roomForm</result>
		</action>
		
		<!-- Action that saves the room  -->
		<action name="SaveRoom" class="de.nak.stundenplandb.action.RoomAction" method="save">
			<result type="redirect">ShowRoomForm.action</result>
			<result type="tiles" name="input">roomForm</result>
		</action>
		
		<!-- Action that cancels the room form-->
		<action name="CancelNewRoom" class="de.nak.stundenplandb.action.RoomAction" method="cancel">
			<result type="redirect">ShowMasterData.action</result>
		</action>
		
		
		<!-- StudentGroup related actions -->
		
		<!-- Action that displays the studentgroup form-->
		<action name="ShowStudentGroupForm" class="de.nak.stundenplandb.action.StudentGroupAction">
		    <interceptor-ref name="validation">
		        <param name="excludeMethods">execute</param>
		    </interceptor-ref>
			<result type="tiles">studentGroupForm</result>
		</action>
		
		<!-- Action that saves the student group-->
		<action name="SaveStudentGroup" class="de.nak.stundenplandb.action.StudentGroupAction" method="save">
			<result type="redirect">ShowStudentGroupForm.action</result>
			<result type="tiles" name="input">studentGroupForm</result>
		</action>	
				
		<!-- Action that cancels the studentgroup form -->
		<action name="CancelNewStudentGroup" class="de.nak.stundenplandb.action.StudentGroupAction" method="cancel">
			<result type="redirect">ShowMasterData.action</result>
		</action>
			
		
			
		<!-- Meeting related actions -->
		
		<!-- Action that shows the meeting menu and meeting lists -->
		<action name="ShowMeetingMenu" class="de.nak.stundenplandb.action.ShowMeetingMenuAction">
			<result type="tiles">meetingMenu</result>
		</action>
		
		<!-- Action that cancels any meeting form -->
		<action name="CancelNewMeeting">
			<result type="redirect">ShowMeetingMenu.action</result>
		</action>
		
		
		
		
		<!-- Lecture related actions -->
		
		<!-- Action that displays the lecture form -->
		<action name="ShowLectureForm" class="de.nak.stundenplandb.action.LectureAction">
		    <interceptor-ref name="validation">
		        <param name="excludeMethods">execute</param>
		    </interceptor-ref>
			<result type="tiles">lectureForm</result>			
		</action>
		
		<!-- Action that reloads page so available rooms are shown -->
		<action name="ShowAvailableRoomsForLecture" class="de.nak.stundenplandb.action.LectureAction" method="showAvailableRooms">
			<result type="tiles">lectureForm</result>			
		</action>		
				
		<!-- Action that checks for collisions and saves the lecture -->
		<action name="SaveLecture" class="de.nak.stundenplandb.action.LectureAction" method="checkAndSave">
			<result type="redirect">ShowLectureForm.action</result>			
			<result type="tiles" name="input">lectureForm</result>			
		</action>	
		
		<!-- Action that saves a lecture even when there are collisions-->
		<action name="SaveLectureWithCollision" class="de.nak.stundenplandb.action.LectureAction" method="save">
			<result type="redirect">ShowLectureForm.action</result>			
			<result type="tiles" name="input">lectureForm</result>			
		</action>		
		
		<!-- Action that cancels the collision mode so lectures are once again checked
			 for collisions with other meetings.-->
		<action name="CancelLectureCollision" class="de.nak.stundenplandb.action.LectureAction" method="cancelCollision">
			<result type="tiles">lectureForm</result>						
		</action>		
		
		<!-- Action that deletes the selected lecture  -->
		<action name="DeleteLecture" class="de.nak.stundenplandb.action.LectureAction" method="delete">			      
			<result type="redirect">ShowMeetingMenu.action</result>		
			<result type="tiles" name="error">meetingMenu</result>			
		</action>	
		
		<!-- Action that opens the lecture form for editing -->
		<action name="EditLecture" class="de.nak.stundenplandb.action.LectureAction" method="load">		   
			<result type="tiles">lectureForm</result>
			<result type="chain" name="error">ShowMeetingMenu</result>						
		</action>
		
		
		
		<!-- Exam related actions  -->		
		
		<!-- Action that displays the exam form -->
		<action name="ShowExamForm" class="de.nak.stundenplandb.action.ExamAction">
		    <interceptor-ref name="validation">
		        <param name="excludeMethods">execute</param>
		    </interceptor-ref>
			<result type="tiles">examForm</result>
		</action>
		
		<!-- Action that saves the exam -->
		<action name="SaveExam" class="de.nak.stundenplandb.action.ExamAction" method="checkAndSave">
			<result type="redirect">ShowExamForm.action</result>			
			<result type="tiles" name="input">examForm</result>
		</action>
		
		<!-- Action that saves a lecture even when there are collisions-->
		<action name="SaveExamWithCollision" class="de.nak.stundenplandb.action.ExamAction" method="save">
			<result type="redirect">ShowExamForm.action</result>			
			<result type="tiles" name="input">examForm</result>			
		</action>		
		
		<!-- Action that cancels the collision mode so lectures are once again checked
			 for collisions with other meetings.-->
		<action name="CancelExamCollision" class="de.nak.stundenplandb.action.ExamAction" method="cancelCollision">
			<result type="tiles">examForm</result>						
		</action>
		
		<!-- Action that deletes the selected exam -->
		<action name="DeleteExam" class="de.nak.stundenplandb.action.ExamAction" method="delete">		   
			<result type="redirect">ShowMeetingMenu.action</result>		
			<result type="tiles" name="error">meetingMenu</result>	
		</action>
		
		<!-- Action that opens the exam form for editing -->
		<action name="EditExam" class="de.nak.stundenplandb.action.ExamAction" method="load">		   
			<result type="tiles">examForm</result>
			<result type="chain" name="error">ShowMeetingMenu</result>						
		</action>
		
		
		
		<!-- Elective related actions -->
		
		<!-- Action that displays the elective form -->
		<action name="ShowElectiveForm" class="de.nak.stundenplandb.action.ElectiveAction">
		    <interceptor-ref name="validation">
		        <param name="excludeMethods">execute</param>
		    </interceptor-ref>
			<result type="tiles">electiveForm</result>
		</action>
		
		<!-- Action that saves the elective -->
		<action name="SaveElective" class="de.nak.stundenplandb.action.ElectiveAction" method="checkAndSave">
			<result type="redirect">ShowElectiveForm.action</result>			
			<result type="tiles" name="input">electiveForm</result>
		</action>
		
		<!-- Action that saves an elective even when there are collisions-->
		<action name="SaveElectiveWithCollision" class="de.nak.stundenplandb.action.ElectiveAction" method="save">
			<result type="redirect">ShowElectiveForm.action</result>			
			<result type="tiles" name="input">electiveForm</result>			
		</action>		
		
		<!-- Action that cancels the collision mode so electives are once again checked
			 for collisions with other meetings.-->
		<action name="CancelElectiveCollision" class="de.nak.stundenplandb.action.ElectiveAction" method="cancelCollision">
			<result type="tiles">electiveForm</result>						
		</action>
		
		<!-- Action that deletes the selected elective -->
		<action name="DeleteElective" class="de.nak.stundenplandb.action.ElectiveAction" method="delete">		   
			<result type="redirect">ShowMeetingMenu.action</result>	
			<result type="tiles" name="error">meetingMenu</result>			
		</action>
		
		<!-- Action that opens the elective form for editing -->
		<action name="EditElective" class="de.nak.stundenplandb.action.ElectiveAction" method="load">		   
			<result type="tiles">electiveForm</result>
			<result type="chain" name="error">ShowMeetingMenu</result>						
		</action>
		
		
		
		<!-- Seminar related actions -->
		
		<!-- Action that shows the seminar form-->
		<action name="ShowSeminarForm" class="de.nak.stundenplandb.action.SeminarAction">
		    <interceptor-ref name="validation">
		        <param name="excludeMethods">execute</param>
		    </interceptor-ref>
			<result type="tiles">seminarForm</result>
		</action>
		
		<!-- Action that saves the seminar -->
		<action name="SaveSeminar" class="de.nak.stundenplandb.action.SeminarAction" method="checkAndSave">
			<result type="redirect">ShowSeminarForm.action</result>			
			<result type="tiles" name="input">seminarForm</result>
		</action>
		
		<!-- Action that saves an seminar even when there are collisions-->
		<action name="SaveSeminarWithCollision" class="de.nak.stundenplandb.action.SeminarAction" method="save">
			<result type="redirect">ShowSeminarForm.action</result>			
			<result type="tiles" name="input">seminarForm</result>			
		</action>		
		
		<!-- Action that cancels the collision mode so seminars are once again checked
			 for collisions with other meetings.-->
		<action name="CancelSeminarCollision" class="de.nak.stundenplandb.action.SeminarAction" method="cancelCollision">
			<result type="tiles">seminarForm</result>						
		</action>
		
		<!-- Action that deletes the selected seminar -->
		<action name="DeleteSeminar" class="de.nak.stundenplandb.action.SeminarAction" method="delete">		   
			<result type="redirect">ShowMeetingMenu.action</result>	
			<result type="tiles" name="error">meetingMenu</result>					
		</action>
		
		<!-- Action that opens the seminar form for editing -->
		<action name="EditSeminar" class="de.nak.stundenplandb.action.SeminarAction" method="load">		   
			<result type="tiles">seminarForm</result>
			<result type="chain" name="error">ShowMeetingMenu</result>						
		</action>		
		
		
		
		<!-- Timetable related Actions-->
		
		<!-- Actions that shows the menu to choose which timetable to display  -->
		<action name="ShowTimetableMenu" class="de.nak.stundenplandb.action.ShowTimetableMenuAction">
			<result type="tiles">timetableMenu</result>
		</action>	
		
		<!-- Action that displays the selected entities timetable  -->
		<action name="ShowTimetableList" class="de.nak.stundenplandb.action.ShowTimetableListAction">
			<result type="tiles">timetableList</result>    					
		</action>	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		<!--  -->
		<action name="RoomForLectureAction" class="de.nak.stundenplandb.action.LectureAction">		   
			<result type="tiles" >roomChoiceForm</result>	
			<result type="tiles" name="input">lectureForm</result>				
		</action>	
		

		<!-- Action that displays the list of cars. -->
<!--
		<action name="ShowCarList" class="de.nak.cars.action.ShowCarListAction">
			<result type="tiles">carList</result>
		</action>
-->
		<!-- Shows the empty form for a new car. -->
<!--
		<action name="AddCar">
			<result type="tiles">carForm</result>
		</action>
-->

		<!-- Saves the new or updated car into the database and shows the car list again. -->
<!--
		<action name="SaveCar" class="de.nak.cars.action.CarAction" method="save">
			<result type="redirect">ShowCarList.action</result>
			<result type="tiles" name="input">carForm</result>
		</action>
-->

		<!-- Loads a existing car and shows it in the car form. -->
<!--
		<action name="EditCar" class="de.nak.cars.action.CarAction" method="load">
			<result type="tiles">carForm</result>
			<result type="chain" name="input">ShowCarList</result>
		</action>
-->

		<!-- Deletes the selected car and shows the car list again. -->
<!--
		<action name="DeleteCar" class="de.nak.cars.action.CarAction" method="delete">
			<result type="redirect">ShowCarList.action</result>
			<result type="chain" name="input">ShowCarList</result>
		</action>
-->

		<!-- Action for the cancel button. Is required to avoid stack traces in log. -->
<!--
		<action name="CancelCar" class="de.nak.cars.action.CarAction" method="cancel">
			<result type="redirect">ShowCarList.action</result>
		</action>
-->

	</package>
</struts>